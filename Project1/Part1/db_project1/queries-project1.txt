--DROP TABLE EMPLOYEE;
CREATE TABLE EMPLOYEE(
FNAME VARCHAR(15) NOT NULL,
MINIT CHAR,
LNAME VARCHAR(15) NOT NULL,
SSN CHAR(9) NOT NULL,
BDATE DATE,
ADDRESS VARCHAR(30),
SEX CHAR,
SALARY DECIMAL(10,2),
SUPER_SSN CHAR(9),
DNO INT NOT NULL,
PRIMARY KEY(SSN),
FOREIGN KEY (SUPER_SSN) REFERENCES EMPLOYEE(SSN));
ALTER TABLE EMPLOYEE ADD CONSTRAINT FK FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNUMBER);
--ALTER TABLE EMPLOYEE DROP CONSTRAINT FK FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNUMBER);

--DROP TABLE DEPARTMENT;
CREATE TABLE DEPARTMENT(
DNAME VARCHAR(15) NOT NULL,
DNUMBER INT NOT NULL,
MGR_SSN CHAR(9) NOT NULL,
MGR_START_DATE DATE,
PRIMARY KEY(DNUMBER),
UNIQUE(DNAME),
FOREIGN KEY (MGR_SSN) REFERENCES EMPLOYEE(SSN));
ALTER TABLE DEPARTMENT ADD CONSTRAINT FK FOREIGN KEY (MGR_SSN) REFERENCES EMPLOYEE(SSN);
--ALTER TABLE EMPLOYEE DROP CONSTRAINT FK FOREIGN KEY (DNO) REFERENCES DEPARTMENT(DNUMBER);

--DROP TABLE PROJECT;
CREATE TABLE PROJECT (
PNAME VARCHAR(15) NOT NULL,
PNUMBER INT  NOT NULL,
PLOCATION VARCHAR(15) ,
DNUM INT NOT NULL,
PRIMARY KEY(PNUMBER),
UNIQUE(PNAME),
FOREIGN KEY(DNUM) REFERENCES DEPARTMENT(DNUMBER));
ALTER TABLE PROJECT ADD CONSTRAINT FK FOREIGN KEY (DNUM) REFERENCES DEPARTMENT(DNUMBER);

--DROP TABLE WORKS_ON;
CREATE TABLE WORKS_ON(
ESSN CHAR(9) NOT NULL,
PNO INT NOT NULL,
HOURS DECIMAL(3,1) NOT NULL,
PRIMARY KEY(ESSN,PNO),
FOREIGN KEY (ESSN) REFERENCES EMPLOYEE(SSN),
FOREIGN KEY(PNO) REFERENCES PROJECT(PNUMBER));
ALTER TABLE WORKS_ON ADD CONSTRAINT FK1 FOREIGN KEY (ESSN) REFERENCES EMPLOYEE(SSN);
ALTER TABLE WORKS_ON ADD CONSTRAINT FK2 FOREIGN KEY (PNO) REFERENCES PROJECT(PNUMBER);

--DROP TABLE DEPT_LOCATIONS; 
CREATE TABLE DEPT_LOCATIONS{
DNUMBER INT NOT NULL,
DLOCATION VARCHAR(15) NOT NULL,
PRIMARY KEY(DNUMBER,DLOCATION),
FOREIGN KEY (DNUMBER) REFERENCES DEPARTMENT(DNUMBER));
ALTER TABLE DEPT_LOCATIONS ADD CONSTRAINT FK FOREIGN KEY (DNUMBER) REFERENCES DEPARTMENT(DNUMBER);

--DROP TABLE DEPENDENT;
CREATE TABLE DEPENDENT(
ESSN CHAR(9) NOT NULL,
DEPENDENT_NAME VARCHAR(15) NOT NULL,
SEX CHAR,
BDATE DATE,
RELATIONSHIP VARCHAR(8),
PRIMARY KEY (ESSN,DEPENDENT_NAME),
FOREIGN KEY (ESSN) REFERENCES EMPLOYEE (SSN));
ALTER TABLE DEPT_LOCATIONS ADD CONSTRAINT FK FOREIGN KEY (ESSN) REFERENCES EMPLOYEE(SSN);

--Select all the attributes for all employees whose last name is 'Jones' or ‘James’.
SELECT * FROM EMPLOYEE 
WHERE LNAME IN ('Jones','James');

--Select all the attributes for all employees whose first name is 'Kim' or ‘Wilson’.
SELECT * FROM EMPLOYEE 
WHERE FNAME IN ('Kim','Wilson');

--Select the names and Ssn of employees who work on more than one project and count the total hours that the employees work on.  
SELECT E.FNAME,E.LNAME, E.SSN , COUNT(W.HOURS) AS CNT
FROM EMPLOYEE AS E,WORKS_ON AS W
WHERE E.SSN=W.ESSN
AND COUNT(W.PNO)>1
GROUP BY E.SSN;

--4. For each PROJECT, retrieve the project name, number, and location plus the number of employees who works on the project.
SELECT P.PNAME, P.PNUMBER,P.PLOCATION, COUNT(W.ESSN) AS CNT
FROM PROJECT  AS P,WORKS_ON AS W
WHERE P.PNUMBER=W.PNO
GROUP BY P.PNUMBER;

--5. For each employee who works in department 5 on a project in Houston, retrieve the employee’s Ssn, 
--first and last names, and the project number, name, and hours for each project that the employee works on.
SELECT E.SSN,E.FNAME,E.LNAME,P.PNUMBER,P.NAME,W.HOURS
FROM EMPLOYEE AS E,DEPT_LOCATIONS AS D,PROJECT AS P,WORKS_ON AS E
WHERE E.DNO=D.DNUMBER 
AND P.PNUMBER=W.PNO 
AND W.ESSN=E.SSN
AND D.DNUMBER=5 AND D.DLOCATION='Houston';

--6. Retrieve the last name and first name of all employees who work more than 40 hours per week total (on all their projects).
SELECT E.LNAME,E.FNAME,SUM(W.HOURS) AS TOTAL
FROM EMPLOYEE AS E , WORKS_ON AS W,PROJECT AS P
WHERE W.ESSN=E.SSN
AND P.PNUMBER=W.PNO
AND TOTAL>40;

--7.	Select the first and last name of each employee who is a supervisor, plus count the total number of employees supervised by each supervisor.
SELECT E2.FNAME,E2.LNAME,COUNT(E1.SSN) AS CNT
FROM EMPLOYEE AS E1, EMPLOYEE AS E2
WHERE E1.SUPER_SSN=E2.SSN;

--8.	 For each project determine the total hours that employees work on that project per week.
SELECT SUM(W.HOURS),W.PNO
FROM WORKS_ON AS W, EMPLOYEE AS E
WHERE E.SSN=W.ESSN
GROUP BY W.PNO;

--9. Find which employee has more than 2 dependents.
SELECT E.SSN,E.FNAME,E.LNAME,COUNT(D.ESSN) AS CNT
FROM EMPLOYEE AS E,DEPENDENT AS D
WHERE D.ESSN=E.SSN
AND CNT>2
GROUP BY E.SSN;

--10.Find which employee has more than 1 children.
SELECT E.SSN,COUNT(D.ESSN) AS CNT
FROM EMPLOYEE AS E,DEPENDENT AS D
WHERE D.RELATIONSHIP='Children'
AND CNT>1
GROUP BY E.SSN;

--11.	 Find all the employee who works in the department that is located in Atlanta. Select their first name and last name.
SELECT E.SSN,E.LNAME,E.FNAME
FROM EMPLOYEE AS E , DEPT_LOCATIONS AS D, DEPARTMENT AS T
WHERE D.DNUMBER=T.DNUMBER
AND E.DNO=T.DNUMBER
AND D.DLOCATION='Atlanta';

--12.	Find all the departments located in Houston and list how many projects are their under those departments.

SELECT D.DNUMBER,D.DNAME,COUNT(P.PNUMBER) AS CNT
FROM DEPARTMENT AS D , DEPT_LOCATIONS AS DL, PROJECT AS P
WHERE D.DNUMBER=DL.DNUMBER
AND P.DNUM=D.DNUMBER
AND DL.DLOCATION='Houston'
GROUP BY D.DNUMBER ;


--1. Insert a record ('Services', 1, '123456789', '11-AUG-2012') into DEPARTMENT.

INSERT INTO DEPARTMENT VALUES('Services', 1, '123456789', '11-AUG-2012');

--2. Insert a record ('Purchasing', 3, '990110110', '02-FEB-2013') into DEPARTMENT.

INSERT INTO DEPARTMENT VALUES('Purchasing', 3, '990110110', '02-FEB-2013');

--3. Insert a record ('Customers', 12, '333445555', '14-JAN-2013') into DEPARTMENT.

INSERT INTO DEPARTMENT VALUES('Customers', 12, '333445555', '14-JAN-2013');

--4. Update the Dnumber of the DEP_LOCATIONS record with Dlocation='Seattle' to 9.

UPDATE DEPT_LOCATIONS SET DNUMBER=9
WHERE DLOCATION='Seattle';

--5. Update the Salary of the EMPLOYEE record with SSN=444444444 to 55000.

UPDATE EMPLOYEE SET SALARY=55000
WHERE SSN=444444444;

--6. Insert a record ('Jane', 'B', 'Smith', '666666606', '01-MAR-1980', '3556 W Second Street,Miami,FL', 'F', 85000, '666666603', 5) into EMPLOYEE.

INSERT INTO EMPLOYEE VALUES('Jane', 'B', 'Smith', '666666606', '01-MAR-1980', '3556 W Second Street,Miami,FL', 'F', 85000, '666666603', 5);

--7. Update the hours of the WORKS_ON record with Pno=1 for the employee with SSN='666884444' to 25.

UPDATE WORKS_ON SET PNO=25
WHERE ESSN='666884444' AND PNO=1;

--8. Delete the EMPLOYEE record with Ssn= '432765098'.

DELETE FROM EMPLOYEE WHERE SSN= '432765098';

--9.	Delete the DEPARTMENT record with DNUMBER = 9.

DELETE FROM DEPARTMENT WHERE DNUMBER= 9;

--10.	Delete all the dependents of employee with Ssn = '666666608' 

DELETE FROM DEPENDENT WHERE ESSN='666666608';


--5.	Execute 3 more Insert commands in SQLPLUS that attempt to insert 3 more records, such that the records violate the integrity constraints.
-- Make each of the 3 records violate a different type of integrity constraint. Capture your commands in spool files for turning in.

--REFERENTIAL INTEGRITY
INSERT INTO EMPLOYEE VALUES ('Anitha', 'V', 'Indra', '272727272', '27-MAY-1995', '908 GREEK ROW,ARLINGTON,TX', 'F', 40000, '888665555', 2);

--DOMAIN CONSTRAINT
INSERT INTO EMPLOYEE VALUES ('Anitha', 'V', 'Indra', '272727272', '27-MAY-1995', '908 GREEK ROW,ARLINGTON,TX', 'F', 40000, '888665555', X);

--ENTITY
INSERT INTO EMPLOYEE VALUES ('Anitha', 'V', 'Indra', NULL, '27-MAY-1995', '908 GREEK ROW,ARLINGTON,TX', 'F', 40000, '888665555', 5);

--6.	Execute a command in SQLPLUS to delete a record that violates a referential integrity constraint. Capture your command in a spool file for turning in.

DELETE FROM DEPARTMENT WHERE DNUMBER='5';

--7.	Repeat 5, but Insert three new records that do not violate any integrity constraints. Capture your commands in spool files for turning in.

INSERT INTO EMPLOYEE VALUES ('Anitha', 'V', 'Indra', '100166143', '27-MAY-1995', '908 GREEK ROW,ARLINGTON,TX', 'F', 40000, '888665555', 5);

INSERT INTO EMPLOYEE VALUES ('Surya', 'R', 'Kakarlapudi', '113008730', '30-MAY-1992', '908 GREEK ROW,HOUSTON,TX', 'F', 40000, '888665555', 5);

INSERT INTO EMPLOYEE VALUES ('Suchitra', 'V', 'Nagarajan', '100166605', '27-JAN-1995', '908 GREEK ROW,ARLINGTON,TX', 'F', 40000, '888665555', 5);